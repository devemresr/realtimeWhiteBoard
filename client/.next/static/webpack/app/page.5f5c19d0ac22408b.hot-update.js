"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/canvas.tsx":
/*!***********************************!*\
  !*** ./src/components/canvas.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Canvas)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Canvas(param) {\n    let { socket } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const requestRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [isDrawing, setIsDrawing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [brushSize, setBrushSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(5);\n    const [brushColor, setBrushColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('#000000');\n    const [strokePoints, setStrokePoints] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]); // stores all the data from what mouse event tracked gets cleared everytime mouseDown gets triggered\n    const pointsBuffer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const retryBuffer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n    const incompletePacketTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const packageNumber = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(1);\n    const strokeNumber = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(1);\n    const lastBroadcastPoint = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const POINTS_PER_PACKET = 5;\n    const MAXGAP = 30;\n    const INCOMPLETE_PACKAGE_TIMEOUT = 500;\n    // Initialize canvas settings\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            ctx.imageSmoothingEnabled = true;\n            ctx.imageSmoothingQuality = 'high';\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n            ctx.strokeStyle = brushColor;\n            ctx.lineWidth = brushSize;\n        }\n    }[\"Canvas.useEffect\"], [\n        brushColor,\n        brushSize\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            if (!socket) return;\n            const handleDrawingPacket = {\n                \"Canvas.useEffect.handleDrawingPacket\": (data)=>{\n                    const isLastPackage = data === null || data === void 0 ? void 0 : data.isLastPacket;\n                    const firstPackage = (data === null || data === void 0 ? void 0 : data.packageSequenceNumber) === 1;\n                    drawBroadcastPath(data === null || data === void 0 ? void 0 : data.strokes, firstPackage, isLastPackage);\n                }\n            }[\"Canvas.useEffect.handleDrawingPacket\"];\n            socket.on('recieved-data', handleDrawingPacket);\n            // Cleanup\n            return ({\n                \"Canvas.useEffect\": ()=>{\n                    socket.off('recieved-data', handleDrawingPacket);\n                }\n            })[\"Canvas.useEffect\"];\n        }\n    }[\"Canvas.useEffect\"], [\n        socket\n    ]);\n    // Smart interpolation that considers curve direction from previous points\n    const smartInterpolation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[smartInterpolation]\": (points, maxGap)=>{\n            if (points.length < 2) return points;\n            const result = [\n                points[0]\n            ];\n            for(let i = 1; i < points.length; i++){\n                const prev = points[i - 1];\n                const currentPoint = points[i];\n                const distance = Math.sqrt((currentPoint.x - prev.x) ** 2 + (currentPoint.y - prev.y) ** 2);\n                if (distance <= maxGap) {\n                    result.push(currentPoint);\n                    continue;\n                }\n                // For only large gaps use interpolation\n                const numInterpolated = Math.ceil(distance / maxGap);\n                // Determine curve direction from context\n                let controlOffset = {\n                    x: 0,\n                    y: 0\n                };\n                if (i >= 2) {\n                    // Use previous two points to determine direction\n                    const prevPrev = points[i - 2];\n                    const direction = {\n                        x: prev.x - prevPrev.x,\n                        y: prev.y - prevPrev.y\n                    };\n                    // Smooth the control point based on direction\n                    controlOffset = {\n                        x: direction.x * 0.3,\n                        y: direction.y * 0.3\n                    };\n                } else if (i < points.length - 1) {\n                    // Use next point to determine direction\n                    const next = points[i + 1];\n                    const direction = {\n                        x: next.x - currentPoint.x,\n                        y: next.y - currentPoint.y\n                    };\n                    controlOffset = {\n                        x: -direction.x * 0.3,\n                        y: -direction.y * 0.3\n                    };\n                }\n                // Generate smooth interpolated points using quadratic curve\n                for(let j = 1; j <= numInterpolated; j++){\n                    const t = j / numInterpolated;\n                    // Quadratic bezier interpolation\n                    const controlPoint = {\n                        x: (prev.x + currentPoint.x) / 2 + controlOffset.x,\n                        y: (prev.y + currentPoint.y) / 2 + controlOffset.y\n                    };\n                    const interpolatedPoint = {\n                        x: (1 - t) * (1 - t) * prev.x + 2 * (1 - t) * t * controlPoint.x + t * t * currentPoint.x,\n                        y: (1 - t) * (1 - t) * prev.y + 2 * (1 - t) * t * controlPoint.y + t * t * currentPoint.y\n                    };\n                    result.push(interpolatedPoint);\n                }\n            }\n            return result;\n        }\n    }[\"Canvas.useCallback[smartInterpolation]\"], []);\n    const drawPathOnCanvas = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[drawPathOnCanvas]\": function(points) {\n            let isLastPacket = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : undefined;\n            if (!canvasRef.current || points.length < 2) return;\n            const ctx = canvasRef.current.getContext('2d');\n            ctx.strokeStyle = brushColor;\n            ctx.lineWidth = brushSize;\n            ctx.lineCap = 'round';\n            ctx.lineJoin = 'round';\n            // Smart interpolation to fill gaps\n            const interpolatedPoints = smartInterpolation(points, MAXGAP); // This array's length varies with velocity and its the final array for the canvas to draw\n            console.log('points in drawPathOnCanvas', points, 'interpolatedPoints, ', interpolatedPoints);\n            ctx.beginPath();\n            ctx.moveTo(interpolatedPoints[0].x, interpolatedPoints[0].y);\n            // Use quadratic curves for smoother rendering\n            for(let i = 1; i < interpolatedPoints.length - 1; i++){\n                const current = interpolatedPoints[i];\n                const next = interpolatedPoints[i + 1];\n                const controlX = (current.x + next.x) / 2;\n                const controlY = (current.y + next.y) / 2;\n                ctx.quadraticCurveTo(current.x, current.y, controlX, controlY);\n            }\n            ctx.stroke();\n        }\n    }[\"Canvas.useCallback[drawPathOnCanvas]\"], [\n        brushColor,\n        brushSize,\n        smartInterpolation\n    ]);\n    const drawBroadcastPath = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[drawBroadcastPath]\": (points, isFirstPacket, isLastPacket)=>{\n            if ((points === null || points === void 0 ? void 0 : points.length) === 0) return;\n            const standalonePackage = isFirstPacket && isLastPacket;\n            let drawPoints;\n            if (isFirstPacket && !standalonePackage) {\n                // First packet: draw immediately\n                drawPoints = points;\n                lastBroadcastPoint.current = points[points.length - 1];\n                console.log('first packet');\n            } else if (standalonePackage) {\n                console.log('standalone');\n                drawPoints = points;\n                lastBroadcastPoint.current = null;\n            } else if (isLastPacket) {\n                // Last packet: ensure seamless connection\n                console.log('last packet');\n                if (lastBroadcastPoint.current) {\n                    // Check if first point of current packet matches last broadcast point\n                    const firstPoint = points[0];\n                    const lastPoint = lastBroadcastPoint.current;\n                    const distance = Math.sqrt((firstPoint.x - lastPoint.x) ** 2 + (firstPoint.y - lastPoint.y) ** 2);\n                    // If points are very close, avoid duplication\n                    if (distance < 1) {\n                        drawPoints = [\n                            lastBroadcastPoint.current,\n                            ...points.slice(1)\n                        ];\n                    } else {\n                        drawPoints = [\n                            lastBroadcastPoint.current,\n                            ...points\n                        ];\n                    }\n                } else {\n                    drawPoints = points;\n                }\n                lastBroadcastPoint.current = null;\n            } else {\n                // Middle packets: ensure seamless connection\n                console.log('Middle', lastBroadcastPoint.current);\n                if (lastBroadcastPoint.current) {\n                    const firstPoint = points[0];\n                    const lastPoint = lastBroadcastPoint.current;\n                    const distance = Math.sqrt((firstPoint.x - lastPoint.x) ** 2 + (firstPoint.y - lastPoint.y) ** 2);\n                    drawPoints = [\n                        lastBroadcastPoint.current,\n                        ...points\n                    ];\n                // If points are very close, avoid duplication\n                // if (distance < 1) {\n                // drawPoints = [lastBroadcastPoint.current, ...points.slice(1)];\n                // } else {\n                // }\n                } else {\n                    console.log('else');\n                    drawPoints = points;\n                }\n                lastBroadcastPoint.current = points[points.length - 1];\n            }\n            drawPathOnCanvas(drawPoints);\n        }\n    }[\"Canvas.useCallback[drawBroadcastPath]\"], [\n        drawPathOnCanvas\n    ]);\n    // const drawBroadcastPath = useCallback(\n    // \t(points: Point[], isFirstPacket: boolean, isLastPacket: boolean) => {\n    // \t\tif (points?.length === 0) return;\n    // \t\tconst standalonePackage = isFirstPacket && isLastPacket;\n    // \t\tlet drawPoints: Point[];\n    // \t\tconsole.log(\n    // \t\t\t'isFirstPacket',\n    // \t\t\tisFirstPacket,\n    // \t\t\t'standalone, ',\n    // \t\t\tstandalonePackage,\n    // \t\t\t'isLastPackage',\n    // \t\t\tisLastPacket,\n    // \t\t\t'drawBroadcastPath',\n    // \t\t\tpoints\n    // \t\t);\n    // \t\tif (isFirstPacket && !standalonePackage) {\n    // \t\t\t// First packet: draw immediately, no buffering\n    // \t\t\t// drawPoints = points.slice(0, points.length - 1);\n    // \t\t\tdrawPoints = points;\n    // \t\t\tlastBroadcastPoint.current = points[points.length - 1];\n    // \t\t\t// son noktaya kadarini ciz\n    // \t\t\tconsole.log('first packet ');\n    // \t\t} else if (standalonePackage) {\n    // \t\t\tconsole.log('standalone ');\n    // \t\t\tdrawPoints = points;\n    // \t\t\tlastBroadcastPoint.current = null;\n    // \t\t} else if (isLastPacket) {\n    // \t\t\t// Last packet: draw everything including the final point\n    // \t\t\tconsole.log('last packett');\n    // \t\t\t//\n    // \t\t\tdrawPoints = lastBroadcastPoint.current\n    // \t\t\t\t? [lastBroadcastPoint.current, ...points]\n    // \t\t\t\t: points;\n    // \t\t\tlastBroadcastPoint.current = null;\n    // \t\t} else {\n    // \t\t\t// Middle packets: connect from last point but hold the final point\n    // \t\t\tconsole.log('Middle', lastBroadcastPoint.current);\n    // \t\t\tconst pointsToDraw = lastBroadcastPoint.current\n    // \t\t\t\t? [lastBroadcastPoint.current, ...points]\n    // \t\t\t\t: points;\n    // \t\t\tdrawPoints = pointsToDraw;\n    // \t\t\tlastBroadcastPoint.current = points[points.length - 1];\n    // \t\t}\n    // \t\tdrawPathOnCanvas(drawPoints);\n    // \t},\n    // \t[drawPathOnCanvas]\n    // );\n    const startDrawing = (e)=>{\n        const rect = canvasRef.current.getBoundingClientRect();\n        const { offsetX, offsetY } = e.nativeEvent;\n        const pos = {\n            x: offsetX,\n            y: offsetY,\n            timestamp: Date.now()\n        };\n        setStrokePoints([\n            pos\n        ]);\n        setIsDrawing(true);\n        packageNumber.current = 1; // this reset has to be in the start not the stop drawing function because when a user stops if we reset the last timeout for incomplete package could get a resetted packageNumber\n        pointsBuffer.current = [\n            pos\n        ];\n        strokeId.current = generateStrokeId();\n        // Draw initial dot\n        const ctx = canvasRef.current.getContext('2d');\n        ctx.beginPath();\n        ctx.arc(offsetX, offsetY, brushSize / 2, 0, Math.PI * 2);\n        ctx.fillStyle = brushColor;\n        ctx.fill();\n    };\n    const handlePackageSending = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[handlePackageSending]\": ()=>{\n            const packageThreshold = Math.floor(pointsBuffer.current.length / POINTS_PER_PACKET);\n            if (packageThreshold > 0) {\n                // Clear any pending timeout since we're sending complete packets\n                if (incompletePacketTimeout.current) {\n                    clearTimeout(incompletePacketTimeout.current);\n                    incompletePacketTimeout.current = null;\n                }\n                // Send complete packets immediately\n                for(let i = 0; i < packageThreshold; i++){\n                    const strokes = pointsBuffer.current.splice(0, POINTS_PER_PACKET);\n                    const packageSequenceNumber = packageNumber.current++;\n                    const strokeData = {\n                        strokes,\n                        strokeId: strokeId.current,\n                        packageSequenceNumber\n                    };\n                    retryBuffer.current.push(strokeData);\n                    socket.emit('drawing-packet', strokeData);\n                }\n            } else {\n                // Set timeout for remaining incomplete packet (if any)\n                if (pointsBuffer.current.length > 0) {\n                    if (incompletePacketTimeout.current) {\n                        clearTimeout(incompletePacketTimeout.current);\n                        incompletePacketTimeout.current = null;\n                    }\n                    incompletePacketTimeout.current = setTimeout({\n                        \"Canvas.useCallback[handlePackageSending]\": ()=>{\n                            const strokes = pointsBuffer.current.splice(0, pointsBuffer.current.length);\n                            const packageSequenceNumber = packageNumber.current++;\n                            const strokeData = {\n                                strokes,\n                                strokeId: strokeId.current,\n                                packageSequenceNumber\n                            };\n                            retryBuffer.current.push(strokeData);\n                            socket.emit('drawing-packet', strokeData);\n                        }\n                    }[\"Canvas.useCallback[handlePackageSending]\"], INCOMPLETE_PACKAGE_TIMEOUT);\n                }\n            }\n        }\n    }[\"Canvas.useCallback[handlePackageSending]\"], [\n        socket\n    ]);\n    const draw = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[draw]\": (e)=>{\n            if (!isDrawing) return;\n            const { offsetX, offsetY } = e.nativeEvent;\n            const currentPos = {\n                x: offsetX,\n                y: offsetY,\n                timestamp: Date.now()\n            };\n            setStrokePoints({\n                \"Canvas.useCallback[draw]\": (prev)=>{\n                    const strokePoints = [\n                        ...prev,\n                        currentPos\n                    ];\n                    pointsBuffer.current.push(currentPos);\n                    handlePackageSending();\n                    cancelAnimationFrame(requestRef.current);\n                    requestRef.current = requestAnimationFrame({\n                        \"Canvas.useCallback[draw]\": ()=>{\n                            const canvas = canvasRef.current;\n                            const ctx = canvas.getContext('2d');\n                            drawPathOnCanvas(strokePoints);\n                        }\n                    }[\"Canvas.useCallback[draw]\"]);\n                    return strokePoints;\n                }\n            }[\"Canvas.useCallback[draw]\"]);\n        }\n    }[\"Canvas.useCallback[draw]\"], [\n        isDrawing,\n        drawPathOnCanvas,\n        brushSize\n    ]);\n    const stopDrawing = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"Canvas.useCallback[stopDrawing]\": ()=>{\n            if (!isDrawing) return; // Early return if not drawing\n            // Final smooth render of the complete stroke\n            if (strokePoints.length > 1) {\n                cancelAnimationFrame(requestRef.current);\n                drawPathOnCanvas(strokePoints);\n            }\n            if (incompletePacketTimeout.current) {\n                // Clear any pending timeout\n                clearTimeout(incompletePacketTimeout.current);\n                incompletePacketTimeout.current = null;\n                // Send remaining points immediately so theres no loss of timeouted packages if the user starts drawing before the timeout ends\n                const strokes = pointsBuffer.current.splice(0, pointsBuffer.current.length);\n                const strokeSequenceNumber = strokeNumber.current++;\n                const packageSequenceNumber = packageNumber.current;\n                const strokeData = {\n                    strokes,\n                    strokeId: strokeId.current,\n                    packageSequenceNumber,\n                    isLastPacket: true,\n                    strokeSequenceNumber\n                };\n                retryBuffer.current.push(strokeData);\n                socket.emit('drawing-packet', strokeData);\n            } else {\n                // If no remaining points, send a stroke end signal\n                const strokeSequenceNumber = strokeNumber.current++;\n                const strokeEndData = {\n                    strokeId: strokeId.current,\n                    isLastPacket: true,\n                    packageSequenceNumber: packageNumber.current,\n                    strokeSequenceNumber,\n                    strokes: []\n                };\n                socket.emit('drawing-packet', strokeEndData);\n            }\n            setIsDrawing(false);\n            setStrokePoints([]);\n            if (requestRef.current) {\n                cancelAnimationFrame(requestRef.current);\n            }\n        }\n    }[\"Canvas.useCallback[stopDrawing]\"], [\n        isDrawing,\n        strokePoints,\n        drawPathOnCanvas\n    ]);\n    const clearCanvas = ()=>{\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    };\n    const generateStrokeId = ()=>{\n        return Date.now().toString() + Math.random().toString(36).substr(2, 9);\n    };\n    const strokeId = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)('');\n    // Clean up animation frame on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Canvas.useEffect\": ()=>{\n            return ({\n                \"Canvas.useEffect\": ()=>{\n                    cancelAnimationFrame(requestRef.current);\n                }\n            })[\"Canvas.useEffect\"];\n        }\n    }[\"Canvas.useEffect\"], []);\n    const [inputInfo, setInputInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        horizontal: 10,\n        vertical: 0\n    });\n    const onInputChange = (value, fieldName)=>{\n        setInputInfo((prev)=>({\n                ...prev,\n                [fieldName]: Number(value)\n            }));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4 flex gap-4 items-center flex-wrap\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            \"Size:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                min: \"1\",\n                                max: \"50\",\n                                value: brushSize,\n                                onChange: (e)=>setBrushSize(+e.target.value),\n                                className: \"w-20 \"\n                            }, void 0, false, {\n                                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                                lineNumber: 482,\n                                columnNumber: 6\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: [\n                                    brushSize,\n                                    \"px\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                                lineNumber: 490,\n                                columnNumber: 6\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 480,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"flex items-center gap-2\",\n                        children: [\n                            \"Color:\",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"color\",\n                                value: brushColor,\n                                onChange: (e)=>setBrushColor(e.target.value)\n                            }, void 0, false, {\n                                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                                lineNumber: 495,\n                                columnNumber: 6\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 493,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: clearCanvas,\n                        className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n                        children: \"Clear\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 502,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-sm text-gray-600\",\n                        children: [\n                            \"Points in current stroke: \",\n                            strokePoints.length\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 509,\n                        columnNumber: 5\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                lineNumber: 479,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        placeholder: \"enter px in horizontal\",\n                        name: \"horizontal\",\n                        value: inputInfo.horizontal,\n                        className: \"max-w-fit absolute z-30 left-0 \",\n                        onChange: (e)=>onInputChange(e.target.value, 'horizontal')\n                    }, void 0, false, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 515,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        placeholder: \"enter px in vertical\",\n                        name: \"vertical\",\n                        value: inputInfo.vertical,\n                        className: \"max-w-fit absolute z-30 left-80\",\n                        onChange: (e)=>onInputChange(e.target.value, 'vertical')\n                    }, void 0, false, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 522,\n                        columnNumber: 5\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>{\n                            setInputInfo({\n                                horizontal: 10,\n                                vertical: 0\n                            });\n                        },\n                        children: \"reset\"\n                    }, void 0, false, {\n                        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                        lineNumber: 529,\n                        columnNumber: 5\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                lineNumber: 514,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-red-600 absolute top-0 left-0\",\n                style: {\n                    width: \"\".concat(inputInfo.horizontal + 2.5, \"px\"),\n                    height: \"\".concat(inputInfo.vertical + 80, \"px\")\n                }\n            }, void 0, false, {\n                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                lineNumber: 537,\n                columnNumber: 4\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                title: \"canvas\",\n                ref: canvasRef,\n                width: 1800,\n                height: 1000,\n                onMouseDown: startDrawing,\n                onMouseMove: draw,\n                onMouseUp: stopDrawing,\n                onMouseLeave: stopDrawing,\n                className: \"cursor-crosshair border border-gray-300\"\n            }, void 0, false, {\n                fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n                lineNumber: 544,\n                columnNumber: 4\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/emreyildirim/Desktop/finalProject/client/src/components/canvas.tsx\",\n        lineNumber: 478,\n        columnNumber: 3\n    }, this);\n}\n_s(Canvas, \"ehJiWeoKEoU0R25CFkzL4BIFt5g=\");\n_c = Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/canvas.tsx\n"));

/***/ })

});